name: Build custom AMI
on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build custom AMI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: NPM install    
        run: npm i

      - name: Compress codebase
        run: touch webapp.tar.gz && tar --exclude=webapp.tar.gz --exclude='.git' --exclude='.github' --exclude='.vscode' --exclude='node_modules' --exclude="package-lock.json" --exclude=".env" -zcvf webapp.tar.gz .

      - name: Run Unit tests  
        run: npm test  

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.PACKER_BUILD_AWS_REGION }}

      - name: Setup packer
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Initialize packer
        id: init
        run: "packer init ./ec2-ami-build.pkr.hcl"
        working-directory: ./packer

      - name: Validate packer template
        id: validate
        run: "packer validate -var-file='variables.pkrvars.hcl' ."
        working-directory: ./packer

      - name: Build artifacts
        id: build
        run: "packer build -var-file='variables.pkrvars.hcl' -var 'aws_ami_users=[${{ secrets.AWS_DEMO_ACCOUNT_ID }}]' ."
        working-directory: ./packer

      - name: Update Launch Template and start instance refresh
        id: updateLaunchTemplateAndRefreshInstance
        run: bash scripts/update-launch-template.sh
        env:
          LAUNCH_TEMPLATE_NAME: ${{ secrets.LAUNCH_TEMPLATE_NAME }}
          AUTOSCALING_GROUP_NAME: ${{ secrets.AUTOSCALING_GROUP_NAME }}

